{"version":3,"sources":["Ethers/Ethers.js","images/swapper_logo.png","Swapper/Swapper.js","App.js","reportWebVitals.js","index.js"],"names":["EthersContext","createContext","provider","contract","signer","address","EthersProvider","contractAddress","abi","children","useState","setSigner","useEffect","getSigner","useSigner","setContract","ethers","Contract","useContract","setAddress","a","getAddress","useAddress","Provider","value","USELESS_ADDRESS","web3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","appName","rpc","56","chainId","useBalance","action","balance","setBalance","token","erc20ABI","balanceOf","getBalance","swapBNBForUseless","swapper","amount","sendTransaction","from","to","utils","parseEther","gasLimit","hexlify","then","results","wait","swapUselessForBNB","parseUnits","functions","approve","receipt","sellUselessForBNB","uselessBypass","receiver","BuySell","quantity","onQuantity","props","useContext","console","log","Stack","direction","alignItems","justifyContent","Typography","sx","fontSize","toFixed","TextField","autoFocus","margin","id","label","onChange","fullWidth","Send","onReceiver","type","SwapperDialog","useTheme","transactionPending","setTransactionPending","setAction","setQuantity","setReceiver","buttonLabel","onQuantityChange","event","target","Dialog","open","onClose","aria-labelledby","DialogTitle","p","spacing","src","swapperLogo","height","Chip","variant","size","color","slice","DialogContent","Tabs","indicatorColor","aria-label","Tab","qauntity","hidden","DialogActions","pr","pb","Button","onClick","swap","catch","reason","Backdrop","zIndex","theme","modal","CircularProgress","Swapper","connect","setProvider","web3Provider","providers","Web3Provider","undefined","alert","error","disconnect","connected","connectProvider","disconnectProvider","useProvider","Ethers","uselessSwapperABI","createTheme","palette","mode","primary","main","dark","contrastText","App","React","setOpen","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a60f3b3.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect, useMemo } from 'react'\nimport { ethers } from 'ethers'\n\n// Binance Smartchain URL needed for USELESS\nconst BSC_URL = 'https://bsc-dataseed.binance.org/'\n/*\n    Context for handling interaction with the blockchain\n */\nexport const EthersContext = createContext({\n    provider: null,\n    contract: null,\n    signer: null,\n    address: '',\n})\n\n/*\n    hook for creating a contract. Declared outside of the component for cleanliness.\n */\nconst useContract = (address, abi, provider) => {\n    const [contract, setContract] = useState(null)\n    useEffect(() => {\n        if (address && provider) setContract(new ethers.Contract(address, abi, provider))\n    }, [address, abi, provider])\n    return contract\n}\n\n/*\n    hook to get the address of the signer\n */\nconst useSigner = provider => {\n    const [signer, setSigner] = useState(null)\n    useEffect(() => {\n        provider ? setSigner(provider.getSigner()) : setSigner(null)\n    }, [provider])\n    return signer\n}\n/*\n    hook to store the address for the provider. This saves having to call an async function everytime\n    the address is needed.\n */\nconst useAddress = signer => {\n    const [address, setAddress] = useState('')\n    useEffect(() => {\n        async function getAddress() {\n            setAddress(await signer.getAddress())\n        }\n        signer ? getAddress() : setAddress('')\n    }, [signer])\n    return address\n}\n/*\n    Context Provider for Ethers.js interaction.\n    this provider is generic in that it makes no assumption at which network your using.\n    alternatively the provider could be passed into the component allowing the use of other providers that aren't\n    JSONRPCProviders.\n */\nconst EthersProvider = ({ contractAddress, abi, provider, children }) => {\n    // hook to create the contract instance TODO optimize using createMemo\n    const signer = useSigner(provider)\n    // create the contract for this provider using the signer\n    const contract = useContract(contractAddress, abi, signer)\n    // address\n    const address = useAddress(signer)\n    return <EthersContext.Provider value={{ provider, contract, signer, address }}>{children}</EthersContext.Provider>\n}\n\nexport default EthersProvider\n","export default __webpack_public_path__ + \"static/media/swapper_logo.4840bddf.png\";","import React, { useEffect, useState, useContext } from 'react'\nimport {\n    Backdrop,\n    Box,\n    Button,\n    Chip,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Stack,\n    Switch,\n    Tab,\n    Tabs,\n    TextField,\n    Typography,\n} from '@mui/material'\nimport EthersProvider, { EthersContext } from '../Ethers'\nimport Web3Modal from 'web3modal'\nimport { ethers } from 'ethers'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport uselessSwapperABI from '../abi/UselessSwapper.json'\nimport erc20ABI from '../abi/ERC20.json'\nimport swapperLogo from '../images/swapper_logo.png'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { useTheme } from '@mui/material/styles'\n\nconst UNISWAP_ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nconst USELESS_ADDRESS = '0x2cd2664Ce5639e46c6a3125257361e01d0213657'\nconst USELESS_SWAPPER_ADDRESS = '0x253B07ac48Aa0E9476cE80de61710478dF0d63a5'\n\nconst providerOptions = {\n    walletConnectMainNet: {\n        appName: 'Useless',\n        network: 'binance',\n        rpc: {\n            56: 'https://bsc-dataseed1.binance.org:443',\n        },\n        chainId: 56,\n    },\n    walletConnectTestNet: {\n        appName: 'Useless',\n        network: 'binance',\n        rpc: {\n            56: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        },\n        chainId: 56,\n    },\n}\n\nconst web3Modal = new Web3Modal({\n    network: 'binance',\n    cacheProvider: true,\n    providerOptions: {\n        walletconnect: {\n            package: WalletConnectProvider,\n            options: providerOptions.walletConnectMainNet,\n        },\n    },\n})\n/*\n    creates a web3 provider using WalletConnect\n    TODO drop web3.js and incorporate WalletConnect directly into Etherjs\n */\nfunction useProvider(connect) {\n    const [provider, setProvider] = useState(null)\n    useEffect(() => {\n        async function connectProvider() {\n            try {\n                const web3Provider = await web3Modal.connect()\n                setProvider(new ethers.providers.Web3Provider(web3Provider))\n            } catch (err) {\n                if (err === undefined) {\n                    alert(\n                        'If you are having trouble connecting to MetaMask, please check if you still have a pending connection request'\n                    ) //TODO still checking wallet library to catch MetamskError better\n                }\n                console.error(err, provider) // TODO Toast notification\n                if (provider !== null) {\n                    setProvider(null)\n                    await provider.disconnect()\n                }\n                // TODO pass this to a callback for a modal popup\n                throw err\n            }\n        }\n\n        async function disconnectProvider() {\n            if (provider !== null && provider.connected) {\n                try {\n                    await provider.disconnect()\n                } catch (err) {\n                    // TODO this should display the error\n                    alert('Failed to disconnect wallet')\n                }\n\n                await provider.disconnect()\n            }\n            setProvider(null)\n        }\n\n        connect ? connectProvider() : disconnectProvider()\n    }, [connect])\n    return provider\n}\n\n/*\n    Hook to get the ETHER balance of this signer\n */\nconst useBalance = (address, signer, action) => {\n    const [balance, setBalance] = useState(0)\n    useEffect(() => {\n        async function getBalance() {\n            const token = new ethers.Contract(USELESS_ADDRESS, erc20ABI, signer) // TODO create a hook for the token\n            let balance\n            if (action !== '1') {\n                balance = (await token.balanceOf(address)) * 1e-9\n            } else {\n                balance = (await signer.getBalance()) * 1e-18\n            }\n            setBalance(balance)\n        }\n        address && signer ? getBalance() : setBalance(0)\n    }, [address, signer, action])\n    return balance\n}\n/*\n    Using PCS calculate token in tokens\n */\nconst useReceiveAmount = (provider, quantity) => {\n    const [receive, setReceive] = useState(0)\n    useEffect(() => {\n        async function getReceiveAmount() {}\n        provider && quantity ? getReceiveAmount() : setReceive(0)\n    }, [provider, quantity])\n    return receive\n}\n\nconst swapBNBForUseless = (address, signer, token, swapper, amount) => {\n    return signer\n        .sendTransaction({\n            from: signer.address,\n            to: swapper.address,\n            value: ethers.utils.parseEther(amount),\n            gasLimit: ethers.utils.hexlify(1500000),\n        })\n        .then(results => {\n            return results.wait()\n        })\n}\n/*\n    selling Useless for BNB\n */\nconst swapUselessForBNB = (address, signer, token, swapper, amount) => {\n    amount = ethers.utils.parseUnits(amount, 'gwei')\n    return token.functions.approve(swapper.address, amount).then(results => {\n        return results.wait().then(receipt => {\n            return swapper.functions\n                .sellUselessForBNB(amount, { gasLimit: ethers.utils.hexlify(1500000) })\n                .then(results => {\n                    return results.wait()\n                })\n        })\n    })\n}\n\nconst uselessBypass = (address, signer, token, swapper, amount, receiver) => {\n    amount = ethers.utils.parseUnits(amount, 'gwei')\n    return token.functions.approve(swapper.address, amount).then(results => {\n        return results.wait().then(receipt => {\n            return swapper.functions.uselessBypass(ethers.utils.getAddress(address), amount).then(results => {\n                return results.wait()\n            })\n        })\n    })\n}\n\nconst BuySell = ({ action, quantity, onQuantity, ...props }) => {\n    const { provider, contract, signer, address } = useContext(EthersContext)\n    const balance = useBalance(address, signer, action)\n    console.log(action)\n    return (\n        <Stack {...props}>\n            <Stack direction={'row'} alignItems={'center'} justifyContent={'space-between'}>\n                <Typography sx={{ fontSize: '.8em' }}>\n                    Balance: {balance.toFixed(4)} {action === '2' ? 'USELESS' : 'BNB'}\n                </Typography>\n            </Stack>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Quantity\"\n                value={quantity}\n                onChange={onQuantity}\n                fullWidth\n            />\n            <Stack direction={'row'} justifyContent={'flex-end'}>\n                {/*<Slider step={25} max={100} marks />*/}\n                {/*<Typography sx={{ fontSize: '.8em' }}>Receive: 0 USELESS</Typography>*/}\n            </Stack>\n        </Stack>\n    )\n}\n\nconst Send = ({ action, quantity, onQuantity, receiver, onReceiver, ...props }) => {\n    const { provider, contract, signer, address } = useContext(EthersContext)\n    const balance = useBalance(address, signer, 1)\n    return (\n        <Stack {...props}>\n            <TextField autoFocus margin=\"dense\" label=\"Receiver\" value={receiver} onChange={onReceiver} fullWidth />\n            <Stack direction={'row'} alignItems={'center'} justifyContent={'space-between'}>\n                <Typography sx={{ fontSize: '.8em' }}>Balance: {balance.toFixed(4)} USELESS</Typography>\n            </Stack>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Quantity\"\n                type=\"email\"\n                value={quantity}\n                onChange={onQuantity}\n                fullWidth\n            />\n            <Stack direction={'row'} justifyContent={'flex-end'}>\n                {/*<Slider step={25} max={100} marks />*/}\n                {/*<Typography sx={{ fontSize: '.8em' }}>Receive: 0 USELESS</Typography>*/}\n            </Stack>\n        </Stack>\n    )\n}\n\nconst SwapperDialog = props => {\n    const theme = useTheme()\n    const [transactionPending, setTransactionPending] = useState(false)\n    const { provider, contract, signer, address } = useContext(EthersContext)\n    const [action, setAction] = useState('1')\n    const [quantity, setQuantity] = useState('')\n    const [receiver, setReceiver] = useState('')\n    const [buttonLabel, setButtonLabel] = useState('ACCEPT')\n    // const token = useToken(address, signer)\n    // const allowance = useAllowance(address, contract, action)\n    const onQuantityChange = event => {\n        setQuantity(event.target.value)\n    }\n    const onReceiverChange = event => {\n        setReceiver(event.target.value)\n    }\n    const onAccept = event => {\n        const token = new ethers.Contract(USELESS_ADDRESS, erc20ABI, signer)\n        let swap\n        if (action === '1') {\n            swap = swapBNBForUseless\n        } else if (action === '2') {\n            swap = swapUselessForBNB\n        } else {\n            swap = uselessBypass\n        }\n        setTransactionPending(true)\n        swap(address, signer, token, contract, quantity, receiver)\n            .then(receipt => {\n                // TODO implement a toast message\n                setQuantity('')\n                setTransactionPending(false)\n            })\n            .catch(reason => {\n                setTransactionPending(false)\n            })\n    }\n    // const receiveAmount = useReceiveAmount(provider, quantity)\n    const onTabChange = (event, value) => {\n        setAction(value)\n    }\n    return (\n        <Dialog open={props.open} onClose={props.onClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n            <DialogTitle id=\"form-dialog-title\">\n                <Stack direction={'row'} justifyContent={'space-between'} alignItems={'center'} p={'.5vh'}>\n                    <Stack direction={'row'} alignItems={'center'} spacing={'.5vw'}>\n                        <img src={swapperLogo} height={'30vh'} />\n                        <Typography sx={{ fontSize: '.8em' }}>\n                            <b>SWAP</b>\n                        </Typography>\n                    </Stack>\n                    <Chip\n                        variant={'outlined'}\n                        size={'small'}\n                        color={'success'}\n                        label={`Account: ${address.slice(0, 4)}...${address.slice(38)}`}\n                    />\n                </Stack>\n                {/*<Divider />*/}\n            </DialogTitle>\n            <DialogContent>\n                <Stack spacing={1}>\n                    <Tabs\n                        onChange={onTabChange}\n                        indicatorColor=\"primary\"\n                        aria-label=\"secondary tabs example\"\n                        value={action}\n                    >\n                        <Tab label=\"Buy\" value=\"1\" />\n                        <Tab label=\"Sell\" value=\"2\" />\n                        <Tab label=\"Send\" value=\"3\" />\n                    </Tabs>\n                    {action !== '3' && <BuySell action={action} qauntity={quantity} onQuantity={onQuantityChange} />}\n                    {action === '3' && (\n                        <Send\n                            hidden={action === '3' || action === '2'}\n                            receiver={receiver}\n                            onReceiver={onReceiverChange}\n                            onQuantity={onQuantityChange}\n                        />\n                    )}\n                </Stack>\n                {/*<TabPanel value=\"2\">Item Two</TabPanel>*/}\n                {/*<TabPanel value=\"3\">Item Three</TabPanel>*/}\n            </DialogContent>\n            <DialogActions>\n                <Stack direction={'row'} spacing={2} sx={{ pr: 2, pb: 2 }}>\n                    <Button size={'small'} onClick={props.onClose} color=\"primary\" variant={'contained'}>\n                        Cancel\n                    </Button>\n                    <Button size={'small'} onClick={onAccept} color=\"primary\" variant={'contained'}>\n                        {buttonLabel}\n                    </Button>\n                </Stack>\n            </DialogActions>\n            <Backdrop open={transactionPending} sx={{ color: '#ffffff', zIndex: theme => theme.zIndex.modal + 1 }}>\n                <CircularProgress color={'inherit'} />\n            </Backdrop>\n        </Dialog>\n    )\n}\n\nconst Swapper = ({ open, ...props }) => {\n    const provider = useProvider(open === true)\n    return (\n        <EthersProvider provider={provider} abi={uselessSwapperABI} contractAddress={USELESS_SWAPPER_ADDRESS}>\n            {provider !== null && <SwapperDialog open={open && provider !== null} {...props} />}\n        </EthersProvider>\n    )\n}\n\nexport default Swapper\n","import React from 'react'\nimport Swapper from './Swapper/Swapper'\nimport { Stack, Button, ThemeProvider } from '@mui/material'\n\nimport { createTheme } from '@mui/material/styles'\n\nconst theme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#EAB729',\n            dark: '#EAB729',\n            contrastText: '#000000',\n        },\n    },\n})\n\nexport default function App() {\n    const [open, setOpen] = React.useState(false)\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Stack alignItems={'center'} justifyContent={'center'} sx={{ height: '100vh', p: '1vw' }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n                    Click here to claim your free Useless IPad\n                </Button>\n            </Stack>\n            <Swapper open={open} onClose={handleClose} />\n        </ThemeProvider>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}