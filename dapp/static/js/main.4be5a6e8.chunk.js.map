{"version":3,"sources":["helpers/utilities.js","helpers/chains.js","helpers/bignumber.js","helpers/web3.js","constants/actions.js","useless_logo.png","App.js","reportWebVitals.js","index.js"],"names":["sanitizeHex","hex","substring","length","getChainData","chainId","chainData","supportedChains","filter","chain","chain_id","Error","API_KEY","process","rpc_url","includes","rpcUrl","replace","name","short_name","network","network_id","native_currency","symbol","decimals","contractAddress","balance","convertStringToHex","value","BigNumber","toString","convertAmountToRawNumber","times","pow","initWeb3","provider","web3","Web3","eth","extend","methods","call","outputFormatter","utils","hexToNumber","getAddress","a","getAccounts","accounts","useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","maxWidth","logo","width","main","account","fontSize","paper","margin","submit","backgroundColor","App","useState","setProvider","amount","setAmount","lastTransaction","setLastTransaction","classes","useEffect","console","log","web3Modal","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","disconnect","currentProvider","close","onConnect","connect","subscribeProvider","net","getId","networkId","address","connected","on","sendTransaction","tx","Promise","resolve","reject","once","txHash","catch","err","decimalToHex","send","parseInt","alert","getTransactionCount","count","rawTransaction","from","nonce","gasPrice","gasLimit","to","data","Grid","container","component","className","CssBaseline","item","xs","src","alt","Typography","TextField","type","color","variant","required","fullWidth","id","label","onChange","e","target","autoFocus","Button","onClick","Paper","elevation","window","location","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4be5a6e8.chunk.js","sourcesContent":["import * as ethUtil from 'ethereumjs-util'\nimport supportedChains from './chains'\nimport { convertAmountToRawNumber, convertStringToHex } from './bignumber'\n\nexport function capitalize(string) {\n    return string\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ')\n}\n\nexport function ellipseText(text = '', maxLength = 9999) {\n    if (text.length <= maxLength) {\n        return text\n    }\n    const _maxLength = maxLength - 3\n    let ellipse = false\n    let currentLength = 0\n    const result =\n        text\n            .split(' ')\n            .filter(word => {\n                currentLength += word.length\n                if (ellipse || currentLength >= _maxLength) {\n                    ellipse = true\n                    return false\n                } else {\n                    return true\n                }\n            })\n            .join(' ') + '...'\n    return result\n}\n\nexport function ellipseAddress(address = '', width = 10) {\n    return `${address.slice(0, width)}...${address.slice(-width)}`\n}\n\nexport function padLeft(n, width, z) {\n    z = z || '0'\n    n = n + ''\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n\n}\n\nexport function sanitizeHex(hex) {\n    hex = hex.substring(0, 2) === '0x' ? hex.substring(2) : hex\n    if (hex === '') {\n        return ''\n    }\n    hex = hex.length % 2 !== 0 ? '0' + hex : hex\n    return '0x' + hex\n}\n\nexport function removeHexPrefix(hex) {\n    return hex.toLowerCase().replace('0x', '')\n}\n\nexport function getDataString(func, arrVals) {\n    let val = ''\n    for (let i = 0; i < arrVals.length; i++) {\n        val += padLeft(arrVals[i], 64)\n    }\n    const data = func + val\n    return data\n}\n\nexport function isMobile() {\n    let mobile = false\n\n    function hasTouchEvent() {\n        try {\n            document.createEvent('TouchEvent')\n            return true\n        } catch (e) {\n            return false\n        }\n    }\n\n    function hasMobileUserAgent() {\n        if (\n            /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n                navigator.userAgent\n            ) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n                navigator.userAgent.substr(0, 4)\n            )\n        ) {\n            return true\n        } else if (hasTouchEvent()) {\n            return true\n        }\n        return false\n    }\n\n    mobile = hasMobileUserAgent()\n\n    return mobile\n}\n\nexport function getChainData(chainId) {\n    const chainData = supportedChains.filter(chain => chain.chain_id === chainId)[0]\n\n    if (!chainData) {\n        throw new Error('ChainId missing or not supported')\n    }\n\n    const API_KEY = process.env.REACT_APP_INFURA_ID\n\n    if (chainData.rpc_url.includes('infura.io') && chainData.rpc_url.includes('%API_KEY%') && API_KEY) {\n        const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY)\n\n        return {\n            ...chainData,\n            rpc_url: rpcUrl,\n        }\n    }\n\n    return chainData\n}\n\nexport function hashPersonalMessage(msg) {\n    const buffer = Buffer.from(msg)\n    const result = ethUtil.hashPersonalMessage(buffer)\n    const hash = ethUtil.bufferToHex(result)\n    return hash\n}\n\nexport function recoverPublicKey(sig, hash) {\n    const sigParams = ethUtil.fromRpcSig(sig)\n    const hashBuffer = Buffer.from(hash.replace('0x', ''), 'hex')\n    const result = ethUtil.ecrecover(hashBuffer, sigParams.v, sigParams.r, sigParams.s)\n    const signer = ethUtil.bufferToHex(ethUtil.publicToAddress(result))\n    return signer\n}\n\nexport function recoverPersonalSignature(sig, msg) {\n    const hash = hashPersonalMessage(msg)\n    const signer = recoverPublicKey(sig, hash)\n    return signer\n}\n\nexport async function formatTestTransaction(address, chainId) {\n    // from\n    const from = address\n\n    // to\n    const to = address\n\n    // nonce\n    const _nonce = 'wakka' //await apiGetAccountNonce(address, chainId)\n    const nonce = sanitizeHex(convertStringToHex(_nonce))\n\n    // gasPrice\n    //const gasPrices = await apiGetGasPrices()\n    const _gasPrice = '19099' //gasPrices.slow.price\n    const gasPrice = sanitizeHex(convertStringToHex(convertAmountToRawNumber(_gasPrice, 9)))\n\n    // gasLimit\n    const _gasLimit = 21000\n    const gasLimit = sanitizeHex(convertStringToHex(_gasLimit))\n\n    // value\n    const _value = 0\n    const value = sanitizeHex(convertStringToHex(_value))\n\n    // data\n    const data = '0x'\n\n    // test transaction\n    const tx = {\n        from,\n        to,\n        nonce,\n        gasPrice,\n        gasLimit,\n        value,\n        data,\n    }\n\n    return tx\n}\n\nexport function isObject(obj) {\n    return typeof obj === 'object' && !!Object.keys(obj).length\n}\n","const supportedChains = [\n    {\n        name: 'Binance Smart Chain',\n        short_name: 'bsc',\n        chain: 'smartchain',\n        network: 'mainnet',\n        chain_id: 56,\n        network_id: 56,\n        rpc_url: 'https://bsc-dataseed.binance.org/',\n        native_currency: {\n            symbol: 'BNB',\n            name: 'BNB',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Ethereum Mainnet',\n        short_name: 'eth',\n        chain: 'ETH',\n        network: 'mainnet',\n        chain_id: 1,\n        network_id: 1,\n        rpc_url: 'https://mainnet.infura.io/v3/%API_KEY%',\n        native_currency: {\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Ethereum Ropsten',\n        short_name: 'rop',\n        chain: 'ETH',\n        network: 'ropsten',\n        chain_id: 3,\n        network_id: 3,\n        rpc_url: 'https://ropsten.infura.io/v3/%API_KEY%',\n        native_currency: {\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Ethereum Rinkeby',\n        short_name: 'rin',\n        chain: 'ETH',\n        network: 'rinkeby',\n        chain_id: 4,\n        network_id: 4,\n        rpc_url: 'https://rinkeby.infura.io/v3/%API_KEY%',\n        native_currency: {\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Ethereum Görli',\n        short_name: 'gor',\n        chain: 'ETH',\n        network: 'goerli',\n        chain_id: 5,\n        network_id: 5,\n        rpc_url: 'https://goerli.infura.io/v3/%API_KEY%',\n        native_currency: {\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'RSK Mainnet',\n        short_name: 'rsk',\n        chain: 'RSK',\n        network: 'mainnet',\n        chain_id: 30,\n        network_id: 30,\n        rpc_url: 'https://public-node.rsk.co',\n        native_currency: {\n            symbol: 'RSK',\n            name: 'RSK',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Ethereum Kovan',\n        short_name: 'kov',\n        chain: 'ETH',\n        network: 'kovan',\n        chain_id: 42,\n        network_id: 42,\n        rpc_url: 'https://kovan.infura.io/v3/%API_KEY%',\n        native_currency: {\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Ethereum Classic Mainnet',\n        short_name: 'etc',\n        chain: 'ETC',\n        network: 'mainnet',\n        chain_id: 61,\n        network_id: 1,\n        rpc_url: 'https://ethereumclassic.network',\n        native_currency: {\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'POA Network Sokol',\n        short_name: 'poa',\n        chain: 'POA',\n        network: 'sokol',\n        chain_id: 77,\n        network_id: 77,\n        rpc_url: 'https://sokol.poa.network',\n        native_currency: {\n            symbol: 'POA',\n            name: 'POA',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'POA Network Core',\n        short_name: 'skl',\n        chain: 'POA',\n        network: 'core',\n        chain_id: 99,\n        network_id: 99,\n        rpc_url: 'https://core.poa.network',\n        native_currency: {\n            symbol: 'POA',\n            name: 'POA',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'xDAI Chain',\n        short_name: 'xdai',\n        chain: 'POA',\n        network: 'dai',\n        chain_id: 100,\n        network_id: 100,\n        rpc_url: 'https://dai.poa.network',\n        native_currency: {\n            symbol: 'xDAI',\n            name: 'xDAI',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n    {\n        name: 'Callisto Mainnet',\n        short_name: 'clo',\n        chain: 'callisto',\n        network: 'mainnet',\n        chain_id: 820,\n        network_id: 1,\n        rpc_url: 'https://clo-geth.0xinfra.com/',\n        native_currency: {\n            symbol: 'CLO',\n            name: 'CLO',\n            decimals: '18',\n            contractAddress: '',\n            balance: '',\n        },\n    },\n]\n\nexport default supportedChains\n","import BigNumber from 'bignumber.js'\n\nexport function isNaN(value) {\n    return new BigNumber(`${value}`).isNaN()\n}\n\nexport function isNumber(value) {\n    const isNaNResult = isNaN(value)\n    return !isNaNResult\n}\n\nexport function isInteger(value) {\n    return new BigNumber(`${value}`).isInteger()\n}\n\nexport function isPositive(value) {\n    return new BigNumber(`${value}`).isPositive()\n}\n\nexport function isNegative(value) {\n    return new BigNumber(`${value}`).isNegative()\n}\n\nexport function isZero(value) {\n    return new BigNumber(`${value}`).isZero()\n}\n\nexport function countDecimalPlaces(value) {\n    return new BigNumber(`${value}`).dp()\n}\n\nexport function convertNumberToString(value) {\n    return new BigNumber(`${value}`).toString()\n}\n\nexport function convertStringToNumber(value) {\n    return new BigNumber(`${value}`).toNumber()\n}\n\nexport function convertHexToString(hex) {\n    return new BigNumber(`${hex}`).toString()\n}\n\nexport function convertStringToHex(value) {\n    return new BigNumber(`${value}`).toString(16)\n}\n\nexport function greaterThan(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) === 1\n}\n\nexport function greaterThanOrEqual(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) >= 0\n}\n\nexport function smallerThan(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) === -1\n}\n\nexport function smallerThanOrEqual(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).comparedTo(new BigNumber(`${numberTwo}`)) <= 0\n}\n\nexport function multiply(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).times(new BigNumber(`${numberTwo}`)).toString()\n}\n\nexport function divide(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).dividedBy(new BigNumber(`${numberTwo}`)).toString()\n}\n\nexport function floorDivide(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).dividedToIntegerBy(new BigNumber(`${numberTwo}`)).toString()\n}\n\nexport function mod(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).mod(new BigNumber(`${numberTwo}`)).toString()\n}\n\nexport function add(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).plus(new BigNumber(`${numberTwo}`)).toString()\n}\n\nexport function subtract(numberOne, numberTwo) {\n    return new BigNumber(`${numberOne}`).minus(new BigNumber(`${numberTwo}`)).toString()\n}\n\nexport function convertAmountToRawNumber(value, decimals = 18) {\n    return new BigNumber(`${value}`).times(new BigNumber('10').pow(decimals)).toString()\n}\n\nexport function convertAmountFromRawNumber(value, decimals = 18) {\n    return new BigNumber(`${value}`).dividedBy(new BigNumber('10').pow(decimals)).toString()\n}\n\nexport function handleSignificantDecimals(value, decimals, buffer) {\n    if (!new BigNumber(`${decimals}`).isInteger() || (buffer && !new BigNumber(`${buffer}`).isInteger())) {\n        return null\n    }\n    buffer = buffer ? convertStringToNumber(buffer) : 3\n    decimals = convertStringToNumber(decimals)\n    const absolute = new BigNumber(`${value}`).abs().toNumber()\n    if (smallerThan(absolute, 1)) {\n        decimals = value.slice(2).search(/[^0]/g) + buffer\n        decimals = decimals < 8 ? decimals : 8\n    } else {\n        decimals = decimals < buffer ? decimals : buffer\n    }\n    let result = new BigNumber(`${value}`).toFixed(decimals)\n    result = new BigNumber(`${result}`).toString()\n    return new BigNumber(`${result}`).dp() <= 2\n        ? new BigNumber(`${result}`).toFormat(2)\n        : new BigNumber(`${result}`).toFormat()\n}\n\nexport function formatFixedDecimals(value, decimals) {\n    const _value = convertNumberToString(value)\n    const _decimals = convertStringToNumber(decimals)\n    const result = new BigNumber(new BigNumber(_value).toFixed(_decimals)).toString()\n    return result\n}\n\nexport function formatInputDecimals(inputOne, inputTwo) {\n    const _nativeAmountDecimalPlaces = countDecimalPlaces(inputTwo)\n    const decimals = _nativeAmountDecimalPlaces > 8 ? _nativeAmountDecimalPlaces : 8\n    const result = new BigNumber(formatFixedDecimals(inputOne, decimals)).toFormat().replace(/,/g, '')\n    return result\n}\n","import Web3 from 'web3'\nimport { ETH_CHAIN_ID } from '../constants'\n\nexport const initWeb3 = provider => {\n    const web3 = new Web3(provider)\n\n    web3.eth.extend({\n        methods: [\n            {\n                name: 'chainId',\n                call: ETH_CHAIN_ID,\n                outputFormatter: web3.utils.hexToNumber,\n            },\n        ],\n    })\n\n    return web3\n}\n\nexport const getAddress = async web3 => {\n    const accounts = await web3.eth.getAccounts()\n    return accounts[0]\n}\n","export const ETH_SEND_TRANSACTION = 'eth.sendTransaction()'\nexport const ETH_SIGN = 'eth.sign()'\nexport const PERSONAL_SIGN = 'personal.sign()'\nexport const BOX_GET_PROFILE = 'box.getProfile()'\nexport const DAI_BALANCE_OF = 'dai.balanceOf()'\nexport const DAI_TRANSFER = 'dai.transfer()'\nexport const ETH_CHAIN_ID = 'eth_chainId'\n","export default __webpack_public_path__ + \"static/media/useless_logo.2350e9ae.png\";","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport Typography from '@material-ui/core/Typography'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\n\nimport Web3Modal from 'web3modal'\nimport { initWeb3, getAddress } from './helpers/web3'\nimport { getChainData, sanitizeHex } from './helpers/utilities'\n\nimport { convertStringToHex, convertAmountToRawNumber } from './helpers/bignumber'\n\nimport './App.css'\n\nimport logo from './useless_logo.png'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(0, 2),\n        maxWidth: '600px',\n    },\n    logo: {\n        padding: theme.spacing(1, 1),\n        width: '80%',\n    },\n    main: {\n        alignItems: 'center',\n    },\n    account: {\n        justifyContent: 'center',\n        fontSize: '1em',\n    },\n    paper: {\n        margin: theme.spacing(0, 6),\n        padding: theme.spacing(4, 4, 4, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: '#C42021',\n    },\n}))\n\nfunction App() {\n    const [provider, setProvider] = useState(false)\n    const [amount, setAmount] = useState(false)\n    const [lastTransaction, setLastTransaction] = useState(false)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        console.log()\n    })\n\n    const getNetwork = () => getChainData(provider ? provider?.chainId : 56).network\n\n    const getProviderOptions = () => {\n        const providerOptions = {\n            walletconnect: {\n                package: WalletConnectProvider,\n                network: 'mainnet',\n                options: {\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                    },\n                },\n            },\n        }\n        return providerOptions\n    }\n\n    let web3Modal = new Web3Modal({\n        network: getNetwork(),\n        cacheProvider: true,\n        providerOptions: getProviderOptions(),\n    })\n\n    const disconnect = async () => {\n        if (provider.web3 && provider.web3.currentProvider && provider.web3.currentProvider.close) {\n            await provider.web3.currentProvider.close()\n        }\n        setProvider(false)\n    }\n\n    const onConnect = async () => {\n        try {\n            const provider = await web3Modal.connect()\n            await subscribeProvider(provider)\n            const web3 = initWeb3(provider)\n\n            const networkId = await web3.eth.net.getId()\n            const chainId = await web3.eth.chainId()\n            const address = await getAddress(web3)\n\n            setProvider({\n                web3,\n                provider,\n                connected: true,\n                address,\n                chainId,\n                networkId,\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const subscribeProvider = async provider => {\n        if (!provider.on) {\n            return\n        }\n        provider.on('close', () => disconnect())\n\n        provider.on('accountsChanged', async accounts => {\n            setProvider({ ...provider, connected: true, address: accounts[0] })\n        })\n\n        provider.on('chainChanged', async chainId => disconnect())\n        provider.on('networkChanged', async networkId => disconnect())\n    }\n\n    function sendTransaction(tx) {\n        return new Promise((resolve, reject) => {\n            provider.web3.eth\n                .sendTransaction(tx)\n                .once('transactionHash', txHash => resolve(txHash))\n                .catch(err => reject(err))\n        })\n    }\n\n    const decimalToHex = value => sanitizeHex(convertStringToHex(value))\n\n    const send = async () => {\n        if (parseInt(amount) !== amount && amount <= 0) {\n            alert(amount)\n            return\n        }\n\n        const count = await provider.web3.eth.getTransactionCount(provider.address)\n\n\tconst contractAddress = '0x6eb4328f6B738C1527da8cAB1FacaA0f69F2372a'\n\n\t//OG SWAPPER\n        //const contractAddress = '0x2d72aAb6d81E8EE681430C13850bD77585F222Cb'\n\n        const rawTransaction = {\n            from: provider.address,\n            nonce: decimalToHex(count),\n            gasPrice: decimalToHex(convertAmountToRawNumber(5, 9)),\n            gasLimit: decimalToHex(1000000),\n            to: contractAddress,\n            value: decimalToHex(convertAmountToRawNumber(amount)),\n            chainId: provider.chainId,\n            data: '0x',\n        }\n\n        setLastTransaction(await sendTransaction(rawTransaction))\n    }\n\n    const transactionLink = () => `https://bscscan.com/tx/${lastTransaction}`\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={12} className={classes.paper}>\n                <img src={logo} className={classes.logo} alt=\"Logo\" />\n                {provider.connected ? (\n                    <Grid item>\n                        <Typography className={classes.account}>Connected: {provider.address}</Typography>\n                        <TextField\n                            type=\"number\"\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"bnbAmount\"\n                            label=\"Smart Chain BNB Amount\"\n                            name=\"amount\"\n                            onChange={e => setAmount(e.target.value)}\n                            autoFocus\n                        />\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.submit}\n                            onClick={() => send(amount)}\n                        >\n                            Buy Useless\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => disconnect()}>\n                            Disconnect\n                        </Button>\n                    </Grid>\n                ) : (\n                    <div>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => onConnect()}>\n                            Connect\n                        </Button>\n                    </div>\n                )}\n\n                {lastTransaction ? (\n                    <Paper className={classes.paper} elevation={0}>\n                        <Grid item>\n                            <Typography>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => (window.location.href = transactionLink())}\n                                >\n                                    View Transaction\n                                </Button>\n                            </Typography>\n                        </Grid>\n                    </Paper>\n                ) : (\n                    ''\n                )}\n            </Grid>\n        </Grid>\n    )\n    // return (\n    //     <div className=\"App\">\n    //         <header className=\"App-header\">\n    //             <p>{provider.address?.toLowerCase()}</p>\n    //             {provider.connected ? (\n    //                 <div>\n    //                     <div>\n    //                         <Button variant=\"contained\" color=\"primary\" onClick={() => disconnect()}>\n    //                             Disconnect\n    //                         </Button>\n    //                     </div>\n    //                     <div>\n    //                         <TextField\n    //                             id=\"outlined-basic\"\n    //                             label=\"Smart BNB\"\n    //                             variant=\"outlined\"\n    //                             onChange={e => setAmount(e.target.value)}\n    //                         />\n\n    //                         <Button variant=\"contained\" color=\"primary\" onClick={() => send(amount)}>\n    //                             Send\n    //                         </Button>\n    //                     </div>\n    //                 </div>\n    //             ) : (\n    //                 <Button variant=\"contained\" color=\"primary\" onClick={() => onConnect()}>\n    //                     Connect\n    //                 </Button>\n    //             )}\n    //         </header>\n    //     </div>\n    // )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}